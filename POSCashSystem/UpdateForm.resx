<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>